{"version":3,"sources":["components/edit.js","components/input.js","components/table.js","header.js","app.js","index.js"],"names":["Edit","nav","useNavigate","id","useParams","formik","useFormik","initialValues","book","number","validate","values","errors","onSubmit","a","axios","put","useEffect","getdata","get","response","setValues","data","handleSubmit","className","type","placeholder","name","getFieldProps","touched","style","margin","color","Input","console","log","post","Table","useState","list","setlist","reduce","item","increase","deletehandle","delete","colSpan","map","index","onClick","to","Header","App","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3065799e.chunk.js","sourcesContent":["import axios from 'axios'\r\nimport { useFormik } from 'formik'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\n\r\nfunction Edit() {\r\n    const nav = useNavigate()\r\n    const {id} = useParams()\r\n    const formik = useFormik({\r\n        initialValues:{\r\n            book:\"\",\r\n            number:\"\"\r\n        },\r\n        validate:values => {\r\n            let errors = {}\r\n            if(!values.book){\r\n                errors.book = \"Required\"\r\n            }\r\n            if(!values.number){\r\n                errors.number = \"Required\"\r\n            }\r\n            return errors\r\n        },\r\n        onSubmit:async (values) => {\r\n            let response = await axios.put(`https://62401a5c2aeb48a9af703b1b.mockapi.io/formik/${id}`,values)\r\n            nav(\"/\")\r\n        }\r\n    })\r\n    useEffect(()=>{\r\n        getdata()\r\n    },[])\r\n\r\n    const getdata = async () => {\r\n        let response = await axios.get(`https://62401a5c2aeb48a9af703b1b.mockapi.io/formik/${id}`)\r\n        formik.setValues(response.data)\r\n    }\r\n  return (\r\n    <div>\r\n        <form onSubmit={formik.handleSubmit} className=\"formtag\">\r\n            <input type=\"text\" placeholder='Enter Book Name' name=\"book\"  {...formik.getFieldProps(\"book\")}/>\r\n            {formik.touched.book && formik.errors.book ? <h4 style={{margin:\"0\",color:\"red\"}}>{formik.errors.book}</h4>:null}\r\n            <br />\r\n            <br />\r\n            <input type=\"number\" placeholder='Enter Number of Books' name=\"number\"  {...formik.getFieldProps(\"number\")}/>\r\n            {formik.touched.number && formik.errors.number ? <h4 style={{margin:\"0\",color:\"red\"}}>{formik.errors.number}</h4>:null}\r\n            <br />\r\n            <br />\r\n            <button type='submit'>Submit</button>\r\n        </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Edit","import React from 'react'\r\nimport {useFormik} from \"formik\"\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport axios from \"axios\"\r\n\r\nfunction Input() {\r\n    const nav = useNavigate()\r\n    const formik = useFormik({\r\n        initialValues:{\r\n            book:\"\",\r\n            number:\"\"\r\n        },\r\n        validate:values => {\r\n            let errors = {}\r\n            if(!values.book){\r\n                errors.book = \"Required\"\r\n            }\r\n            if(!values.number){\r\n                errors.number = \"Required\"\r\n            }\r\n            return errors\r\n        },\r\n        onSubmit:async (values) => {\r\n            console.log(values)\r\n            let response = await axios.post(\"https://62401a5c2aeb48a9af703b1b.mockapi.io/formik\",values)\r\n            nav(\"/\")\r\n        }\r\n    })\r\n  return (\r\n    <div>\r\n        <form onSubmit={formik.handleSubmit} className=\"formtag\">\r\n            <input type=\"text\" placeholder='Enter Book Name' name=\"book\"  {...formik.getFieldProps(\"book\")}/>\r\n            {formik.touched.book && formik.errors.book ? <h4 style={{margin:\"0\",color:\"red\"}}>{formik.errors.book}</h4>:null}\r\n            <br />\r\n            <br />\r\n            <input type=\"number\" placeholder='Enter Number of Books' name=\"number\"  {...formik.getFieldProps(\"number\")}/>\r\n            {formik.touched.number && formik.errors.number ? <h4 style={{margin:\"0\",color:\"red\"}}>{formik.errors.number}</h4>:null}\r\n            <br />\r\n            <br />\r\n            <button type='submit'>Submit</button>\r\n        </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Input","import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nfunction Table() {\r\n    const [list,setlist] = useState([])\r\n\r\n    const getdata = async () => {\r\n        let response = await axios.get(\"https://62401a5c2aeb48a9af703b1b.mockapi.io/formik\")\r\n        setlist(response.data)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getdata()\r\n    },[])\r\n\r\n    const reduce = async (item) => {\r\n        const data = {\r\n            book:item.book,\r\n            number:item.number-1\r\n        }\r\n        let response = await axios.put(`https://62401a5c2aeb48a9af703b1b.mockapi.io/formik/${item.id}`,data)\r\n        getdata()\r\n    }\r\n\r\n    const increase = async (item) =>{\r\n        const data = {\r\n            book:item.book,\r\n            number:item.number+1\r\n        }\r\n        let response = await axios.put(`https://62401a5c2aeb48a9af703b1b.mockapi.io/formik/${item.id}`,data)\r\n        getdata()\r\n    } \r\n\r\n    const deletehandle = async (id) => {\r\n        let response = await axios.delete(`https://62401a5c2aeb48a9af703b1b.mockapi.io/formik/${id}`)\r\n        getdata()\r\n    }\r\nreturn (\r\n    <div>\r\n        {\r\n            list == \"\" ? <h1>No Data To Display</h1>\r\n            :(\r\n                <table className='table'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>SL.NO</th>\r\n                            <th>Book Name</th>\r\n                            <th>Number of Books</th>\r\n                            <th colSpan={\"4\"}>Actions</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            list.map((item,index) => {\r\n                                return (\r\n                                    <tr key={index}>\r\n                                        <td>{item.id}</td>\r\n                                        <td>{item.book}</td>\r\n                                        <td>{item.number}</td>\r\n                                        <td>\r\n                                            <button onClick={()=>reduce(item)} className=\"minus\"> - </button>\r\n                                        </td>\r\n                                        <td>\r\n                                            <button onClick={()=>increase(item)} className=\"plus\"> + </button>\r\n                                        </td>\r\n                                        <td>\r\n                                            <NavLink to={`/edit/${item.id}`} ><button className='editbtn'>Edit</button></NavLink>\r\n                                        </td>\r\n                                        <td>\r\n                                            <button onClick={()=>deletehandle(item.id)} className=\"deletebtn\">Delete</button>\r\n                                        </td>\r\n                                    </tr>\r\n                                )\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            )\r\n        }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Table","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nfunction Header() {\r\n  return (\r\n    <div className='header'>\r\n        <NavLink to=\"/\"  className={\"btn\"}><button className='btnt'>Table</button></NavLink>\r\n        <NavLink to=\"/addinput\" className={\"btn\"}><button className='btna'>Add Data</button></NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport { Route, Routes } from 'react-router-dom'\r\nimport Edit from './components/edit'\r\nimport Input from './components/input'\r\nimport Table from './components/table'\r\nimport Header from './header'\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n        <Header />\r\n        <div className='mainbody'>\r\n        <Routes>\r\n            <Route path='/' element={<Table />} />\r\n            <Route path='/addinput' element={<Input />} />\r\n            <Route path='/edit/:id' element={<Edit />} />\r\n        </Routes>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import ReactDOM from 'react-dom'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport App from './app'\r\nimport \"./index.css\"\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <App/>\r\n    </BrowserRouter>\r\n    ,document.getElementById(\"root\"))"],"sourceRoot":""}